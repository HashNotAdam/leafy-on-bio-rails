# standard-rails enabled cops as at version 0.2.0

# This cop from rubocop was added to the Rubocop-Rails
# config as part of this PR:
# https://github.com/rubocop/rubocop-rails/pull/1014
# in order to support some Rails-specific methods. At the
# time of writing, it's disabled in Standard, so it's
# disabled here.
Rails:
  DocumentationBaseURL: https://docs.rubocop.org/rubocop-rails

Rails/ActiveRecordOverride:
  Enabled: true
  Description: >-
    Check for overriding Active Record methods instead of using
    callbacks.
  Severity: warning
  VersionAdded: "0.67"
  VersionChanged: "2.18"
  Include:
    - app/models/**/*.rb

Rails/ApplicationController:
  Enabled: true
  Description: "Check that controllers subclass ApplicationController."
  SafeAutoCorrect: false
  VersionAdded: "2.4"
  VersionChanged: "2.5"

Rails/ApplicationJob:
  Enabled: true
  Description: "Check that jobs subclass ApplicationJob."
  SafeAutoCorrect: false
  VersionAdded: "0.49"
  VersionChanged: "2.5"

Rails/ApplicationMailer:
  Enabled: true
  Description: "Check that mailers subclass ApplicationMailer."
  SafeAutoCorrect: false
  VersionAdded: "2.4"
  VersionChanged: "2.5"

Rails/ApplicationRecord:
  Enabled: true
  Description: "Check that models subclass ApplicationRecord."
  SafeAutoCorrect: false
  VersionAdded: "0.49"
  VersionChanged: "2.5"

Rails/BelongsTo:
  Enabled: true
  Description: >-
    Use `optional: true` instead of `required: false` for
    `belongs_to` relations.
  Reference:
    - https://guides.rubyonrails.org/5_0_release_notes.html
    - https://github.com/rails/rails/pull/18937
  VersionAdded: "0.62"

Rails/Blank:
  Enabled: true
  Description: "Enforces use of `blank?`."
  SafeAutoCorrect: false
  VersionAdded: "0.48"
  VersionChanged: "2.10"
  # Convert usages of `nil? || empty?` to `blank?`
  NilOrEmpty: true
  # Convert usages of `!present?` to `blank?`
  NotPresent: true
  # Convert usages of `unless present?` to `if blank?`
  UnlessPresent: true

Rails/CreateTableWithTimestamps:
  Enabled: true
  Description: >-
    Checks the migration for which timestamps are not included
    when creating a new table.
  VersionAdded: "0.52"
  Include:
    - db/migrate/*.rb
  Exclude:
    # Respect the `active_storage_variant_records` table of `*_create_active_storage_tables.active_storage.rb`
    # auto-generated by `bin/rails active_storage:install` even if `created_at` is not specified.
    - db/migrate/*_create_active_storage_tables.active_storage.rb

Rails/Date:
  Enabled: true
  Description: >-
    Checks the correct usage of date aware methods,
    such as Date.today, Date.current etc.
  VersionAdded: "0.30"
  VersionChanged: "2.11"
  # The value `strict` disallows usage of `Date.today`, `Date.current`,
  # `Date#to_time` etc.
  # The value `flexible` allows usage of `Date.current`, `Date.yesterday`, etc
  # (but not `Date.today`) which are overridden by ActiveSupport to handle current
  # time zone.
  EnforcedStyle: flexible
  SupportedStyles:
    - strict
    - flexible
  AllowToTime: true

Rails/EnvironmentVariableAccess:
  Enabled: true
  Description: "Do not access `ENV` directly after initialization."
  VersionAdded: "2.10"
  VersionChanged: "2.11"
  Include:
    - app/**/*.rb
    - lib/**/*.rb
  Exclude:
    - lib/**/*.rake
  AllowReads: false
  AllowWrites: false

Rails/RedundantPresenceValidationOnBelongsTo:
  Enabled: true
  Description: "Checks for redundant presence validation on belongs_to association."
  SafeAutoCorrect: false
  VersionAdded: "2.13"

Rails/SafeNavigation:
  Enabled: true
  Description: "Use Ruby's safe navigation operator (`&.`) instead of `try!`."
  VersionAdded: "0.43"
  # This will convert usages of `try` to use safe navigation as well as `try!`.
  # `try` and `try!` work slightly differently. `try!` and safe navigation will
  # both raise a `NoMethodError` if the receiver of the method call does not
  # implement the intended method. `try` will not raise an exception for this.
  ConvertTry: false

Rails/SafeNavigationWithBlank:
  Enabled: true
  Description: "Avoid `foo&.blank?` in conditionals."
  VersionAdded: "2.4"
  # While the safe navigation operator is generally a good idea, when
  # checking `foo&.blank?` in a conditional, `foo` being `nil` will actually
  # do the opposite of what the author intends.
  #
  # foo&.blank? #=> nil
  # foo.blank? #=> true
  SafeAutoCorrect: false

Rails/ScopeArgs:
  Enabled: true
  Description: "Checks the arguments of ActiveRecord scopes."
  VersionAdded: "0.19"
  VersionChanged: "2.12"
  Include:
    - app/models/**/*.rb

Rails/StripHeredoc:
  Enabled: true
  Description: "Enforces the use of squiggly heredoc over `strip_heredoc`."
  StyleGuide: "https://rails.rubystyle.guide/#prefer-squiggly-heredoc"
  VersionAdded: "2.15"

Rails/ThreeStateBooleanColumn:
  Enabled: true
  Description: "Add a default value and a `NOT NULL` constraint to boolean columns."
  StyleGuide: "https://rails.rubystyle.guide/#three-state-boolean"
  VersionAdded: "2.19"
  Include:
    - db/**/*.rb

Rails/TimeZoneAssignment:
  Enabled: true
  Description: "Prefer the usage of `Time.use_zone` instead of manually updating `Time.zone` value."
  Reference: "https://thoughtbot.com/blog/its-about-time-zones"
  VersionAdded: "2.10"
  Include:
    - "**/spec/**/*.rb"
    - "**/test/**/*.rb"

Rails/UniqBeforePluck:
  Enabled: true
  Description: "Prefer the use of uniq or distinct before pluck."
  VersionAdded: "0.40"
  VersionChanged: "2.13"
  EnforcedStyle: conservative
  SupportedStyles:
    - conservative
    - aggressive
  SafeAutoCorrect: false

Rails/UnusedIgnoredColumns:
  Enabled: true
  Description: "Remove a column that does not exist from `ignored_columns`."
  VersionAdded: "2.11"
  Include:
    - app/models/**/*.rb

Rails/WhereMissing:
  Enabled: true
  Description: "Use `where.missing(...)` to find missing relationship records."
  StyleGuide: "https://rails.rubystyle.guide/#finding-missing-relationship-records"
  VersionAdded: "2.16"

Rails/WhereNot:
  Enabled: true
  Description: "Use `where.not(...)` instead of manually constructing negated SQL in `where`."
  StyleGuide: "https://rails.rubystyle.guide/#hash-conditions"
  VersionAdded: "2.8"

##############
# CUSTOM RULES
##############

Rails/ActionControllerFlashBeforeRender:
  Enabled: true
  Description: "Use `flash.now` instead of `flash` before `render`."
  SafeAutoCorrect: false
  VersionAdded: "2.16"

Rails/ActionControllerTestCase:
  Enabled: true
  Description: "Use `ActionDispatch::IntegrationTest` instead of `ActionController::TestCase`."
  StyleGuide: "https://rails.rubystyle.guide/#integration-testing"
  Reference: "https://api.rubyonrails.org/classes/ActionController/TestCase.html"
  SafeAutoCorrect: false
  VersionAdded: "2.14"
  Include:
    - "**/test/**/*.rb"

Rails/ActionFilter:
  Enabled: true
  Description: "Enforces consistent use of action filter methods."
  VersionAdded: "0.19"
  EnforcedStyle: action
  SupportedStyles:
    - action
    - filter
  Include:
    - app/controllers/**/*.rb
    - app/mailers/**/*.rb

Rails/ActionOrder:
  Enabled: true
  Description: "Enforce consistent ordering of controller actions."
  VersionAdded: "2.17"
  ExpectedOrder:
    - index
    - show
    - new
    - edit
    - create
    - update
    - destroy
  Include:
    - app/controllers/**/*.rb

Rails/ActiveRecordAliases:
  Enabled: true
  Description: >-
    Avoid Active Record aliases:
    Use `update` instead of `update_attributes`.
    Use `update!` instead of `update_attributes!`.
  VersionAdded: "0.53"
  SafeAutoCorrect: false

Rails/ActiveRecordCallbacksOrder:
  Enabled: true
  Description: "Order callback declarations in the order in which they will be executed."
  StyleGuide: "https://rails.rubystyle.guide/#callbacks-order"
  VersionAdded: "2.7"
  Include:
    - app/models/**/*.rb

Rails/ActiveSupportAliases:
  Enabled: true
  Description: >-
    Avoid ActiveSupport aliases of standard ruby methods:
    `String#starts_with?`, `String#ends_with?`,
    `Array#append`, `Array#prepend`.
  VersionAdded: "0.48"

Rails/ActiveSupportOnLoad:
  Enabled: true
  Description: "Use `ActiveSupport.on_load(...)` to patch Rails framework classes."
  Reference:
    - "https://api.rubyonrails.org/classes/ActiveSupport/LazyLoadHooks.html"
    - "https://guides.rubyonrails.org/engines.html#available-load-hooks"
  SafeAutoCorrect: false
  VersionAdded: "2.16"

Rails/AddColumnIndex:
  Enabled: true
  Description: >-
    Rails migrations don't make use of a given `index` key, but also
    doesn't given an error when it's used, so it makes it seem like an
    index might be used.
  VersionAdded: "2.11"
  Include:
    - db/migrate/*.rb

Rails/AfterCommitOverride:
  Enabled: true
  Description: >-
    Enforces that there is only one call to `after_commit`
    (and its aliases - `after_create_commit`, `after_update_commit`,
    and `after_destroy_commit`) with the same callback name per model.
  VersionAdded: "2.8"

Rails/ArelStar:
  Enabled: true
  Description: 'Enforces `Arel.star` instead of `"*"` for expanded columns.'
  SafeAutoCorrect: false
  VersionAdded: "2.9"

Rails/AssertNot:
  Enabled: true
  Description: "Use `assert_not` instead of `assert !`."
  VersionAdded: "0.56"
  Include:
    - "**/test/**/*"

Rails/AttributeDefaultBlockValue:
  Enabled: true
  Description: "Pass method call in block for attribute option `default`."
  VersionAdded: "2.9"
  Include:
    - "app/models/**/*"

Rails/BulkChangeTable:
  Enabled: true
  Description: "Check whether alter queries are combinable."
  Reference:
    - https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_table
    - https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/Table.html
  VersionAdded: "0.57"
  SupportedDatabases:
    - mysql
    - postgresql
  Include:
    - db/migrate/*.rb

Rails/CompactBlank:
  Enabled: true
  Description: "Checks if collection can be blank-compacted with `compact_blank`."
  Safe: false
  VersionAdded: "2.13"

Rails/ContentTag:
  Enabled: true
  Description: "Use `tag.something` instead of `tag(:something)`."
  Reference:
    - "https://github.com/rubocop/rubocop-rails/issues/260"
    - "https://github.com/rails/rails/issues/25195"
    - "https://api.rubyonrails.org/classes/ActionView/Helpers/TagHelper.html#method-i-content_tag"
  VersionAdded: "2.6"
  VersionChanged: "2.12"
  # This `Exclude` config prevents false positives for `tag` calls to `has_one: tag` and Puma configuration:
  # https://puma.io/puma/Puma/DSL.html#tag-instance_method
  # No helpers are used in normal models and configs.
  Exclude:
    - app/models/**/*.rb
    - config/**/*.rb

Rails/DefaultScope:
  Enabled: true
  Description: "Avoid use of `default_scope`."
  StyleGuide: "https://rails.rubystyle.guide#avoid-default-scope"
  VersionAdded: "2.7"

Rails/Delegate:
  Enabled: true
  Description: "Prefer delegate method for delegations."
  VersionAdded: "0.21"
  VersionChanged: "0.50"
  # When set to true, using the target object as a prefix of the
  # method name without using the `delegate` method will be a
  # violation. When set to false, this case is legal.
  EnforceForPrefixed: true

Rails/DelegateAllowBlank:
  Enabled: true
  Description: "Do not use allow_blank as an option to delegate."
  VersionAdded: "0.44"

Rails/DeprecatedActiveModelErrorsMethods:
  Enabled: true
  Description: "Avoid manipulating ActiveModel errors hash directly."
  Severity: warning
  Safe: false
  VersionAdded: "2.14"
  VersionChanged: "2.18"

Rails/DotSeparatedKeys:
  Enabled: true
  Description: "Enforces the use of dot-separated keys instead of `:scope` options in `I18n` translation methods."
  StyleGuide: "https://rails.rubystyle.guide/#dot-separated-keys"
  VersionAdded: "2.15"

Rails/DuplicateAssociation:
  Enabled: true
  Description: "Don't repeat associations in a model."
  Severity: warning
  VersionAdded: "2.14"
  VersionChanged: "2.18"

Rails/DuplicateScope:
  Enabled: true
  Description: "Multiple scopes share this same where clause."
  Severity: warning
  VersionAdded: "2.14"
  VersionChanged: "2.18"

Rails/DurationArithmetic:
  Enabled: true
  Description: "Do not use duration as arithmetic operand with `Time.current`."
  StyleGuide: "https://rails.rubystyle.guide#duration-arithmetic"
  VersionAdded: "2.13"

Rails/DynamicFindBy:
  Enabled: true
  Description: "Use `find_by` instead of dynamic `find_by_*`."
  StyleGuide: "https://rails.rubystyle.guide#find_by"
  Safe: false
  VersionAdded: "0.44"
  VersionChanged: "2.10"
  # The `Whitelist` has been deprecated, Please use `AllowedMethods` instead.
  Whitelist:
    - find_by_sql
    - find_by_token_for
  AllowedMethods:
    - find_by_prefix_id
    - find_by_prefix_id!
    - find_by_sql
    - find_by_token_for
  AllowedReceivers:
    - Gem::Specification
    - page # Prevents a warning for `page.find_by_id`. See: https://github.com/rubocop/rubocop-rails/issues/778

Rails/EagerEvaluationLogMessage:
  Enabled: true
  Description: "Checks that blocks are used for interpolated strings passed to `Rails.logger.debug`."
  Reference: "https://guides.rubyonrails.org/debugging_rails_applications.html#impact-of-logs-on-performance"
  VersionAdded: "2.11"

Rails/EnumHash:
  Enabled: true
  Description: "Prefer hash syntax over array syntax when defining enums."
  StyleGuide: "https://rails.rubystyle.guide#enums"
  VersionAdded: "2.3"
  Include:
    - app/models/**/*.rb

Rails/EnumUniqueness:
  Enabled: true
  Description: "Avoid duplicate integers in hash-syntax `enum` declaration."
  VersionAdded: "0.46"
  Include:
    - app/models/**/*.rb

Rails/EnvironmentComparison:
  Enabled: true
  Description: "Favor `Rails.env.production?` over `Rails.env == 'production'`."
  VersionAdded: "0.52"

Rails/Exit:
  Enabled: true
  Description: >-
    Favor `fail`, `break`, `return`, etc. over `exit` in
    application or library code outside of Rake files to avoid
    exits during unit testing or running in production.
  VersionAdded: "0.41"
  Include:
    - app/**/*.rb
    - config/**/*.rb
    - lib/**/*.rb
  Exclude:
    - lib/**/*.rake

Rails/ExpandedDateRange:
  Enabled: true
  Description: "Checks for expanded date range."
  StyleGuide: "https://rails.rubystyle.guide/#date-time-range"
  VersionAdded: "2.11"

Rails/FilePath:
  Enabled: true
  Description: "Use `Rails.root.join` for file path joining."
  VersionAdded: "0.47"
  VersionChanged: "2.4"
  EnforcedStyle: slashes
  SupportedStyles:
    - slashes
    - arguments

Rails/FindBy:
  Enabled: true
  Description: "Prefer find_by over where.first."
  StyleGuide: "https://rails.rubystyle.guide#find_by"
  VersionAdded: "0.30"
  VersionChanged: "2.11"
  IgnoreWhereFirst: true
  Include:
    - app/models/**/*.rb

Rails/FindById:
  Enabled: true
  Description: >-
    Favor the use of `find` over `where.take!`, `find_by!`, and `find_by_id!` when you
    need to retrieve a single record by primary key when you expect it to be found.
  StyleGuide: "https://rails.rubystyle.guide/#find"
  VersionAdded: "2.7"

Rails/FindEach:
  Enabled: true
  Description: "Prefer all.find_each over all.each."
  StyleGuide: "https://rails.rubystyle.guide#find-each"
  Safe: false
  VersionAdded: "0.30"
  VersionChanged: "2.19"
  Include:
    - app/models/**/*.rb
  AllowedMethods:
    # Methods that don't work well with `find_each`.
    - order
    - limit
    - select
    - lock
  AllowedPatterns: []

Rails/FreezeTime:
  Enabled: true
  Description: "Prefer `freeze_time` over `travel_to` with an argument of the current time."
  StyleGuide: "https://rails.rubystyle.guide/#freeze-time"
  VersionAdded: "2.16"
  SafeAutoCorrect: false

Rails/HasAndBelongsToMany:
  Enabled: true
  Description: "Prefer has_many :through to has_and_belongs_to_many."
  StyleGuide: "https://rails.rubystyle.guide#has-many-through"
  VersionAdded: "0.12"
  Include:
    - app/models/**/*.rb

Rails/HasManyOrHasOneDependent:
  Enabled: true
  Description: "Define the dependent option to the has_many and has_one associations."
  StyleGuide: "https://rails.rubystyle.guide#has_many-has_one-dependent-option"
  VersionAdded: "0.50"
  Include:
    - app/models/**/*.rb

Rails/HelperInstanceVariable:
  Enabled: true
  Description: "Do not use instance variables in helpers."
  VersionAdded: "2.0"
  Include:
    - app/helpers/**/*.rb

Rails/HttpPositionalArguments:
  Enabled: true
  Description: "Use keyword arguments instead of positional arguments in http method calls."
  VersionAdded: "0.44"
  Include:
    - "spec/**/*"
    - "test/**/*"

Rails/HttpStatus:
  Enabled: true
  Description: "Enforces use of symbolic or numeric value to define HTTP status."
  VersionAdded: "0.54"
  VersionChanged: "2.11"
  EnforcedStyle: symbolic
  SupportedStyles:
    - numeric
    - symbolic

Rails/I18nLazyLookup:
  Enabled: true
  Description: 'Checks for places where I18n "lazy" lookup can be used.'
  StyleGuide: "https://rails.rubystyle.guide/#lazy-lookup"
  Reference: "https://guides.rubyonrails.org/i18n.html#lazy-lookup"
  VersionAdded: "2.14"
  Include:
    - "app/controllers/**/*.rb"

Rails/I18nLocaleAssignment:
  Enabled: true
  Description: "Prefer the usage of `I18n.with_locale` instead of manually updating `I18n.locale` value."
  VersionAdded: "2.11"
  Include:
    - "**/spec/**/*.rb"
    - "**/test/**/*.rb"

Rails/I18nLocaleTexts:
  Enabled: false

Rails/IgnoredColumnsAssignment:
  Enabled: true
  Description: "Looks for assignments of `ignored_columns` that override previous assignments."
  StyleGuide: "https://rails.rubystyle.guide/#append-ignored-columns"
  SafeAutoCorrect: false
  VersionAdded: "2.17"

Rails/IgnoredSkipActionFilterOption:
  Enabled: true
  Description: "Checks that `if` and `only` (or `except`) are not used together as options of `skip_*` action filter."
  Reference: "https://api.rubyonrails.org/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_normalize_callback_options"
  VersionAdded: "0.63"
  Include:
    - app/controllers/**/*.rb
    - app/mailers/**/*.rb

Rails/IndexBy:
  Enabled: true
  Description: "Prefer `index_by` over `each_with_object`, `to_h`, or `map`."
  VersionAdded: "2.5"
  VersionChanged: "2.8"

Rails/IndexWith:
  Enabled: true
  Description: "Prefer `index_with` over `each_with_object`, `to_h`, or `map`."
  VersionAdded: "2.5"
  VersionChanged: "2.8"

Rails/Inquiry:
  Enabled: true
  Description: "Prefer Ruby's comparison operators over Active Support's `Array#inquiry` and `String#inquiry`."
  StyleGuide: "https://rails.rubystyle.guide/#inquiry"
  VersionAdded: "2.7"

Rails/InverseOf:
  Enabled: true
  Description: "Checks for associations where the inverse cannot be determined automatically."
  Reference:
    - https://guides.rubyonrails.org/association_basics.html#bi-directional-associations
    - https://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#module-ActiveRecord::Associations::ClassMethods-label-Setting+Inverses
  VersionAdded: "0.52"
  IgnoreScopes: false
  Include:
    - app/models/**/*.rb

Rails/LexicallyScopedActionFilter:
  Enabled: true
  Description: "Checks that methods specified in the filter's `only` or `except` options are explicitly defined in the class."
  StyleGuide: "https://rails.rubystyle.guide#lexically-scoped-action-filter"
  Safe: false
  VersionAdded: "0.52"
  Include:
    - app/controllers/**/*.rb
    - app/mailers/**/*.rb

Rails/LinkToBlank:
  Enabled: true
  Description: 'Checks that `link_to` with a `target: "_blank"` have a `rel: "noopener"` option passed to them.'
  Reference:
    - https://mathiasbynens.github.io/rel-noopener/
    - https://html.spec.whatwg.org/multipage/links.html#link-type-noopener
    - https://html.spec.whatwg.org/multipage/links.html#link-type-noreferrer
  VersionAdded: "0.62"

Rails/MailerName:
  Enabled: true
  Description: "Mailer should end with `Mailer` suffix."
  StyleGuide: "https://rails.rubystyle.guide/#mailer-name"
  SafeAutoCorrect: false
  VersionAdded: "2.7"
  Include:
    - app/mailers/**/*.rb

Rails/MatchRoute:
  Enabled: true
  Description: >-
    Don't use `match` to define any routes unless there is a need to map multiple request types
    among [:get, :post, :patch, :put, :delete] to a single action using the `:via` option.
  StyleGuide: "https://rails.rubystyle.guide/#no-match-routes"
  VersionAdded: "2.7"
  Include:
    - config/routes.rb
    - config/routes/**/*.rb

Rails/MigrationClassName:
  Enabled: true
  Description: "The class name of the migration should match its file name."
  VersionAdded: "2.14"
  Include:
    - db/migrate/*.rb

Rails/NegateInclude:
  Enabled: true
  Description: "Prefer `collection.exclude?(obj)` over `!collection.include?(obj)`."
  StyleGuide: "https://rails.rubystyle.guide#exclude"
  Safe: false
  VersionAdded: "2.7"
  VersionChanged: "2.9"

Rails/OrderById:
  Enabled: true
  Description: >-
    Do not use the `id` column for ordering.
    Use a timestamp column to order chronologically.
  StyleGuide: "https://rails.rubystyle.guide/#order-by-id"
  VersionAdded: "2.8"

Rails/Output:
  Enabled: true
  Description: "Checks for calls to puts, print, etc."
  SafeAutoCorrect: false
  VersionAdded: "0.15"
  VersionChanged: "0.19"
  Include:
    - app/**/*.rb
    - config/**/*.rb
    - db/**/*.rb
    - lib/**/*.rb

Rails/OutputSafety:
  Enabled: false
  Description: "The use of `html_safe` or `raw` may be a security risk."
  VersionAdded: "0.41"

Rails/Pick:
  Enabled: true
  Description: "Prefer `pick` over `pluck(...).first`."
  StyleGuide: "https://rails.rubystyle.guide#pick"
  Safe: false
  VersionAdded: "2.6"

Rails/Pluck:
  Enabled: true
  Description: "Prefer `pluck` over `map { ... }`."
  StyleGuide: "https://rails.rubystyle.guide#pluck"
  Safe: false
  VersionAdded: "2.7"
  VersionChanged: "2.18"

Rails/PluckId:
  Enabled: true
  Description: "Use `ids` instead of `pluck(:id)` or `pluck(primary_key)`."
  StyleGuide: "https://rails.rubystyle.guide/#ids"
  Safe: false
  VersionAdded: "2.7"

Rails/PluckInWhere:
  Enabled: true
  Description: "Use `select` instead of `pluck` in `where` query methods."
  Safe: false
  VersionAdded: "2.7"
  VersionChanged: "2.8"
  EnforcedStyle: conservative
  SupportedStyles:
    - conservative
    - aggressive

Rails/PluralizationGrammar:
  Enabled: true
  Description: "Checks for incorrect grammar when using methods like `3.day.ago`."
  VersionAdded: "0.35"

Rails/Presence:
  Enabled: true
  Description: "Checks code that can be written more easily using `Object#presence` defined by Active Support."
  VersionAdded: "0.52"

Rails/Present:
  Enabled: true
  Description: "Enforces use of `present?`."
  VersionAdded: "0.48"
  VersionChanged: "0.67"
  # Convert usages of `!nil? && !empty?` to `present?`
  NotNilAndNotEmpty: true
  # Convert usages of `!blank?` to `present?`
  NotBlank: true
  # Convert usages of `unless blank?` to `if present?`
  UnlessBlank: true

Rails/RakeEnvironment:
  Enabled: true
  Description: "Include `:environment` as a dependency for all Rake tasks."
  Safe: false
  VersionAdded: "2.4"
  VersionChanged: "2.6"
  Include:
    - "**/Rakefile"
    - "**/*.rake"
  Exclude:
    - "lib/capistrano/tasks/**/*.rake"

Rails/ReadWriteAttribute:
  Enabled: true
  Description: >-
    Checks for read_attribute(:attr) and
    write_attribute(:attr, val).
  StyleGuide: "https://rails.rubystyle.guide#read-attribute"
  VersionAdded: "0.20"
  VersionChanged: "0.29"
  Include:
    - app/models/**/*.rb

Rails/RedundantAllowNil:
  Enabled: true
  Description: >-
    Finds redundant use of `allow_nil` when `allow_blank` is set to
    certain values in model validations.
  VersionAdded: "0.67"
  Include:
    - app/models/**/*.rb

Rails/RedundantForeignKey:
  Enabled: true
  Description: "Checks for associations where the `:foreign_key` option is redundant."
  VersionAdded: "2.6"

Rails/RedundantReceiverInWithOptions:
  Enabled: true
  Description: "Checks for redundant receiver in `with_options`."
  VersionAdded: "0.52"

Rails/RedundantTravelBack:
  Enabled: true
  Description: Checks for redundant `travel_back` calls.
  VersionAdded: "2.12"
  Include:
    - "**/spec/**/*.rb"
    - "**/test/**/*.rb"

Rails/ReflectionClassName:
  Enabled: true
  Description: "Use a string for `class_name` option value in the definition of a reflection."
  Safe: false
  VersionAdded: "0.64"
  VersionChanged: "2.10"

Rails/RefuteMethods:
  Enabled: true
  Description: "Use `assert_not` methods instead of `refute` methods."
  VersionAdded: "0.56"
  EnforcedStyle: assert_not
  SupportedStyles:
    - assert_not
    - refute
  Include:
    - "**/test/**/*"

Rails/RelativeDateConstant:
  Enabled: true
  Description: "Do not assign relative date to constants."
  SafeAutoCorrect: false
  VersionAdded: "0.48"
  VersionChanged: "2.13"

Rails/RenderInline:
  Enabled: true
  Description: "Prefer using a template over inline rendering."
  StyleGuide: "https://rails.rubystyle.guide/#inline-rendering"
  VersionAdded: "2.7"

Rails/RenderPlainText:
  Enabled: true
  Description: "Prefer `render plain:` over `render text:`."
  StyleGuide: "https://rails.rubystyle.guide/#plain-text-rendering"
  VersionAdded: "2.7"
  # Convert only when `content_type` is explicitly set to `text/plain`.
  ContentTypeCompatibility: true

Rails/RequestReferer:
  Enabled: true
  Description: "Use consistent syntax for request.referer."
  VersionAdded: "0.41"
  EnforcedStyle: referer
  SupportedStyles:
    - referer
    - referrer

Rails/RequireDependency:
  Enabled: true
  Description: "Do not use `require_dependency` when running in Zeitwerk mode. `require_dependency` is for autoloading in classic mode."
  Reference: "https://guides.rubyonrails.org/autoloading_and_reloading_constants.html"
  VersionAdded: "2.10"

Rails/ResponseParsedBody:
  Enabled: true
  Description: Prefer `response.parsed_body` to `JSON.parse(response.body)`.
  Safe: false
  VersionAdded: "2.18"
  VersionChanged: "2.19"
  Include:
    - spec/controllers/**/*.rb
    - spec/requests/**/*.rb
    - test/controllers/**/*.rb
    - test/integration/**/*.rb

Rails/ReversibleMigration:
  Enabled: true
  Description: "Checks whether the change method of the migration file is reversible."
  StyleGuide: "https://rails.rubystyle.guide#reversible-migration"
  Reference: "https://api.rubyonrails.org/classes/ActiveRecord/Migration/CommandRecorder.html"
  VersionAdded: "0.47"
  VersionChanged: "2.13"
  Include:
    - db/**/*.rb

Rails/ReversibleMigrationMethodDefinition:
  Enabled: true
  Description: "Checks whether the migration implements either a `change` method or both an `up` and a `down` method."
  VersionAdded: "2.10"
  VersionChanged: "2.13"
  Include:
    - db/**/*.rb

Rails/RootJoinChain:
  Enabled: true
  Description: "Use a single `#join` instead of chaining on `Rails.root` or `Rails.public_path`."
  VersionAdded: "2.13"

Rails/RootPathnameMethods:
  Enabled: true
  Description: "Use `Rails.root` IO methods instead of passing it to `File`."
  SafeAutoCorrect: false
  VersionAdded: "2.16"

Rails/RootPublicPath:
  Enabled: true
  Description: "Favor `Rails.public_path` over `Rails.root` with `'public'`."
  VersionAdded: "2.15"

Rails/SaveBang:
  Enabled: false
  Description: "Identifies possible cases where Active Record save! or related should be used."
  StyleGuide: "https://rails.rubystyle.guide#save-bang"
  VersionAdded: "0.42"
  VersionChanged: "0.59"
  AllowImplicitReturn: true
  AllowedReceivers: []
  SafeAutoCorrect: false

Rails/ShortI18n:
  Enabled: true
  Description: "Use the short form of the I18n methods: `t` instead of `translate` and `l` instead of `localize`."
  StyleGuide: "https://rails.rubystyle.guide/#short-i18n"
  VersionAdded: "2.7"
  EnforcedStyle: conservative
  SupportedStyles:
    - conservative
    - aggressive

Rails/SkipsModelValidations:
  Description:
    Use methods that skips model validations with caution. See reference
    for more information.
  Reference: https://guides.rubyonrails.org/active_record_validations.html#skipping-validations
  Enabled: true
  Exclude:
    - "**/spec/**/*.rb"
  VersionAdded: "0.47"
  VersionChanged: "2.7"
  ForbiddenMethods:
    - insert
    - insert!
    - insert_all
    - insert_all!
    - toggle!
    - update_all
    - update_attribute
    - update_column
    - update_columns
    - update_counters
    - upsert
    - upsert_all
  AllowedMethods: []

Rails/SquishedSQLHeredocs:
  Enabled: true
  Description: "Checks SQL heredocs to use `.squish`."
  StyleGuide: "https://rails.rubystyle.guide/#squished-heredocs"
  VersionAdded: "2.8"
  VersionChanged: "2.9"
  # Some SQL syntax (e.g. PostgreSQL comments and functions) requires newlines
  # to be preserved in order to work, thus autocorrection is not safe.
  SafeAutoCorrect: false

Rails/TableNameAssignment:
  Enabled: true
  Description: >-
    Do not use `self.table_name =`. Use Inflections or `table_name_prefix` instead.
  StyleGuide: "https://rails.rubystyle.guide/#keep-ar-defaults"
  VersionAdded: "2.14"
  Include:
    - app/models/**/*.rb

Rails/TimeZone:
  Enabled: true
  Description: "Checks the correct usage of time zone aware methods."
  StyleGuide: "https://rails.rubystyle.guide#time"
  Reference: "http://danilenko.org/2012/7/6/rails_timezones"
  SafeAutoCorrect: false
  VersionAdded: "0.30"
  VersionChanged: "2.13"
  # The value `strict` means that `Time` should be used with `zone`.
  # The value `flexible` allows usage of `in_time_zone` instead of `zone`.
  EnforcedStyle: flexible
  SupportedStyles:
    - strict
    - flexible
  Exclude:
    - "**/*.gemspec"

Rails/ToFormattedS:
  Enabled: true
  Description: "Checks for consistent uses of `to_fs` or `to_formatted_s`."
  StyleGuide: "https://rails.rubystyle.guide/#prefer-to-fs"
  EnforcedStyle: to_fs
  SupportedStyles:
    - to_fs
    - to_formatted_s
  VersionAdded: "2.15"

Rails/ToSWithArgument:
  Enabled: true
  Description: "Identifies passing any argument to `#to_s`."
  Safe: false
  VersionAdded: "2.16"

Rails/TopLevelHashWithIndifferentAccess:
  Enabled: true
  Description: "Identifies top-level `HashWithIndifferentAccess`."
  Reference: "https://guides.rubyonrails.org/upgrading_ruby_on_rails.html#top-level-hashwithindifferentaccess-is-soft-deprecated"
  Severity: warning
  VersionAdded: "2.16"
  VersionChanged: "2.18"

Rails/TransactionExitStatement:
  Enabled: true
  Description: "Avoid the usage of `return`, `break` and `throw` in transaction blocks."
  Reference:
    - https://github.com/rails/rails/commit/15aa4200e083
  VersionAdded: "2.14"

Rails/UniqueValidationWithoutIndex:
  Enabled: true
  Description: "Uniqueness validation should have a unique index on the database column."
  VersionAdded: "2.5"
  Include:
    - app/models/**/*.rb

Rails/UnknownEnv:
  Enabled: true
  Description: "Use correct environment name."
  Severity: warning
  VersionAdded: "0.51"
  VersionChanged: "2.18"
  Environments:
    - development
    - test
    - staging
    - production

Rails/Validation:
  Enabled: true
  Description: "Use validates :attribute, hash of validations."
  VersionAdded: "0.9"
  VersionChanged: "0.41"
  Include:
    - app/models/**/*.rb

Rails/WhereEquals:
  Enabled: true
  Description: "Pass conditions to `where` as a hash instead of manually constructing SQL."
  StyleGuide: "https://rails.rubystyle.guide/#hash-conditions"
  SafeAutoCorrect: false
  VersionAdded: "2.9"
  VersionChanged: "2.10"

Rails/WhereExists:
  Enabled: true
  Description: "Prefer `exists?(...)` over `where(...).exists?`."
  SafeAutoCorrect: false
  EnforcedStyle: exists
  SupportedStyles:
    - exists
    - where
  VersionAdded: "2.7"
  VersionChanged: "2.10"

Rails/WhereNotWithMultipleConditions:
  Enabled: true
